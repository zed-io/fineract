version: '3.6'
services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:latest
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_ACTIONS_URL: http://actions-server:3000
      HASURA_WEBHOOK_URL: http://event-handlers:4000
      HASURA_WEBHOOK_SECRET: mywebhooksecret
      FINERACT_DEFAULT_ADMIN_PASSWORD: password

  actions-server:
    build:
      context: ./services/actions
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./services/actions:/app
      - /app/node_modules
    environment:
      DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      NODE_ENV: development
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_URL: http://hasura:8080/v1/graphql
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - hasura

  event-handlers:
    build:
      context: ./services/event-handlers
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./services/event-handlers:/app
      - /app/node_modules
    environment:
      DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      NODE_ENV: development
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_URL: http://hasura:8080/v1/graphql
      WEBHOOK_SECRET: mywebhooksecret
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - hasura

  scheduled-jobs:
    build:
      context: ./services/scheduled-jobs
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./services/scheduled-jobs:/app
      - /app/node_modules
    environment:
      DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      NODE_ENV: development
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_URL: http://hasura:8080/v1/graphql
    depends_on:
      - postgres
      - hasura

volumes:
  postgres_data: